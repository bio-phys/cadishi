# Cadishi example parameter file
general:
  # redirect output to log files
  redirect_output: true
  # print detailed output during computation
  verbose: true
  # max number of work/result packages in IPC queues: large values may [expert]
  # lead to memory issues, small values may harm performance [expert]
  queue_maxsize: 256  # [expert]
  # max waiting time for IPC queues [expert]
  queue_timeout: 3600  # [expert]
  # pin CPU workers to NUMA domain, iff number of workers is equal to the number of domains [expert]
  numa_aware: false  # [expert]
histogram:
  # maximum distance value of the histogram, >0 sets it explicitly, <0 fetches from capriqorn pipeline
  r_max: 70
  # histogram bin width [Angstrom]
  dr: 0.01
  # sum over 'sum' histograms before writing the result (i.e., number of histograms in a single block)
  sum: 10
cpu:
  # select CPU compute kernel
  module: pydh
  # floating point precision
  precision: single
  # number of CPU worker processes, <0 autodetect, >0 set explicitly, 0 disable CPU workers
  workers: -1
  # number of threads per worker process, autodetected if workers is set to autodetection
  threads: 1
  # check during computation if distances lie within r_max, exit on error
  check_input: true
gpu:
  # select GPU compute kernel
  module: cudh
  # floating point precision
  precision: single
  # number of GPU worker processes, up to the number of physical GPUs
  workers: -1
  # check during computation if distances lie within r_max, exit on error
  check_input: true
input:
  # trajectory HDF5 file, Capriqorn preprocessor output
  file: __TRAJECTORY_FILE__
  # first frame to be processed
  first: null
  # last frame to be processed
  last: null
  # only read every `step`th frame
  step: 1
  # null = rely on information present in the input frames (default), [] = force not to use any box, [a, b, c, alpha, beta, gamma] = force use of box as specified
  periodic_box: null
output:
  # output directory for histogram and log files
  directory: ./histograms_output/
  # name of outputfile in hdf5 format
  file: histograms.h5
  # HDF5 file compression, options are null, gzip, lzf
  compression: lzf
  # write distance histograms to HDF5 [expert]
  write_h5: true  # [expert]
  # write distance histograms to NumPy plain text files [expert]
  write_npx: false  # [expert]
  # write distance histograms to NumPy binary files [expert]
  write_npy: false  # [expert]
  # write coordinate triples to text files (harms performance!) [expert]
  write_xyz: false  # [expert]
  # flush file handles every flush_interval histograms [expert]
  flush_interval: 100  # [expert]
